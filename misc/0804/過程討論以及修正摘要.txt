專案演進歷程

初始需求釐清（Phase 0）

確認「開盤前五分鐘」指美股現貨開盤，非期貨
確立使用 Lightweight Charts 而非完整 TradingView
決定採用分階段開發策略


第一階段開發（Phase 1）

實現基礎資料載入與顯示
從下拉選單改為分頁式設計
解決 400 根 K 線填滿畫面問題
實現資料快取機制


第二階段開發（Phase 2）

實現基於 M1 的動態 K 線生成
解決分頁切換時的資料連續性問題
處理跨日交易的時間問題
優化播放效能



關鍵設計決策

分頁 vs 下拉選單

決定採用類似瀏覽器分頁的設計
提供更直觀的視覺體驗


播放架構

統一使用 M1 資料作為基礎
即時聚合生成其他時間刻度
所有分頁共享同一播放時鐘


資料管理

預載所有時間刻度資料
結合歷史資料與即時聚合資料
使用 Map 結構避免重複



四、修正摘要
主要問題與解決方案

K 線數量不足問題

問題：H1/H4 只顯示幾根 K 線
解決：修改資料載入邏輯，回溯歷史資料而非只取當日


播放時切換分頁顯示錯誤

問題：H1 分頁顯示 M1 K 線
解決：實現動態 K 線聚合器（CandleAggregator）


M1 切換回來時間不連續

問題：從 21:25 跳到 23:19
解決：統一所有時間刻度的資料合併邏輯


H1 K 線跳空問題

問題：H1 顯示有跳空但實際資料連續
解決：改進時間對齊邏輯，使用 Map 結構合併資料


跨日播放停止問題

問題：M1 播放到 23:59 停止
解決：修改資料查詢邏輯，支援跨日資料