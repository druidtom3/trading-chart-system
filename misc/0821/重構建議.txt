 核心問題診斷
1. 配置管理混亂問題
問題根源：

data_processor.py 第503行直接硬編碼 detection_range_candles = 2000
DEFAULT_CANDLE_COUNT 配置在多處被忽略
前後端對K線數量限制的理解不一致

具體修改建議：

在 data_processor.py 的 get_pre_market_data 方法中，移除所有硬編碼的數值
統一從 DEFAULT_CANDLE_COUNT[timeframe] 讀取配置值
建立單一配置來源原則：後端 config.py 為唯一真實來源
前端的數據保護邏輯應該移除，完全信任後端返回的數據量

2. FVG檢測器回退邏輯問題
問題根源：

存在4個不同版本的FVG檢測器（simple, v3, v4, 基礎版）
回退邏輯複雜且v4版本有已知bug但仍在使用
fvg_detector_v4.py 的 _safe_timestamp 方法在異常時返回索引值而非時間戳

具體修改建議：

完全移除v4檢測器，不要再作為回退選項
將 fvg_detector_simple.py 設為主要檢測器
移除 data_processor.py 第417-431行的複雜回退邏輯
如果simple檢測器失敗，直接返回空列表，不要嘗試其他版本

3. 緩存策略混亂問題
問題根源：

存在三層緩存：API響應緩存、處理數據緩存、前端緩存
緩存key版本號管理混亂（v3→v4→v5→v6→v7）
沒有統一的緩存失效機制

具體修改建議：

移除 data_processor.py 中的 _response_cache 和 _processed_data_cache
只保留前端的 dataCache 作為唯一緩存層
實施基於時間的緩存失效策略（如5分鐘自動失效）
移除cache_key中的版本號，改用時間戳作為緩存失效依據

4. 時間戳處理不一致問題
問題根源：

前後端對時間戳格式假設不同
存在毫秒/秒級時間戳混用
錯誤處理時返回不合理的值

具體修改建議：

建立時間戳處理標準：後端統一輸出Unix秒級時間戳
移除前端的時間戳自動轉換邏輯（fvg-renderer-multiline.js 第1915-1916行）
在 time_utils.py 中新增統一的時間戳驗證和轉換方法
所有時間戳在輸出前都必須通過驗證方法檢查

5. 前端渲染性能問題
問題根源：

每個FVG創建2個LineSeries，數量過多時導致堆疊溢出
過度的console輸出
沒有實施渲染數量限制

具體修改建議：

在 fvg-renderer-optimized.js 中實施硬性限制：最多渲染50個FVG
實施優先級排序：優先渲染最近的和gap size最大的FVG
移除或大幅減少console.log輸出，特別是循環內的輸出
實施虛擬化渲染：只渲染可視範圍內的FVG

🔧 具體重構任務清單
階段一：統一配置管理（優先級：高）

審查 data_processor.py 中所有使用數字常量的地方
將所有硬編碼數值提取到 config.py
建立配置驗證機制，確保配置值在合理範圍內
移除前端的重複配置和數據保護邏輯

階段二：簡化FVG檢測邏輯（優先級：高）

刪除 fvg_detector_v4.py 檔案
修改 data_processor.py 的 detect_fvgs 方法，只使用simple檢測器
移除所有回退邏輯相關的程式碼
更新FVG檢測條件，確保使用正確的價格欄位（Close而非Open）

階段三：重構緩存系統（優先級：中）

移除後端的所有緩存機制
實施前端單一緩存層
新增緩存過期時間機制
提供明確的緩存清除API端點

階段四：標準化時間戳處理（優先級：中）

在 time_utils.py 新增 validate_timestamp 和 normalize_timestamp 方法
審查所有時間戳輸出點，確保都經過標準化處理
移除前端的時間戳自動轉換邏輯
新增時間戳格式的單元測試

階段五：優化前端渲染（優先級：低）

實施FVG渲染數量限制
新增FVG優先級排序邏輯
移除或條件化console輸出
實施請求防抖動機制

📝 實施順序建議

立即修復：K線數量限制問題（修改 data_processor.py 第503行）
本週完成：移除v4檢測器，簡化回退邏輯
下週完成：統一時間戳處理，建立標準化流程
後續優化：緩存系統重構，前端性能優化

🚨 風險提醒

修改緩存系統時要注意保持向後兼容
移除v4檢測器前要確認simple檢測器的穩定性
時間戳修改可能影響歷史數據的顯示
建議每個階段完成後進行完整的回歸測試

這些建議應該能幫助你逐步清理技術債，提升系統的穩定性和可維護性。建議從最簡單且影響最大的問題開始修復。RetryClaude can make mistakes. Please double-check responses.